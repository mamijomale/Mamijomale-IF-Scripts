/*

FAN-MADE SCRIPT FOR ION FURY

By Jordan MAFIODO aka Mamijomale

----

New special effect, here we are!

For new particles and Effects that manage particles!
*/

var se_linked_surface -1 2
var sprite_x 0 2
var sprite_y 0 2
var sprite_z 0 2
var sprite_sector -1 2
var sprite_angle 0 2
var sprite_cos 0 2
var sprite_sin 1 2

var h_x 0 2
var h_y 0 2
var h_z 0 2

var h_sector -1 2
var h_sprite -1 2
var h_wall -1 2

var phase_3 0 2
var phase_2 0 2
var phase_1 0 2
var bursting_time 0 2
var dmg_type 0 2

var tx_sprite 0 2
var ty_sprite 0 2
var tx_cop 0 2
var ty_cop 0 2

var dmg_1 0 2
var dmg_2 0 2
var dmg_3 0 2
var dmg_4 0 2

// A_FIRE_EXT_LIKE_EFFECT
/* 
	Works like a Fire Extinguisher but will offer more options like the fact to be invisible
	and then, be used as a flat sprite to apply on walls, ceiling and floors to get similar effect.
	
	It can also be used as a shoot condition. 
	Finaly, it can emit different projectile when bursted and different explosions.
	
	hitag = Channel used to enable/disable it. (the burst option in extra is set/unset)
	lotag = Channel activated by the Sprite once it's destroyed
	extra = if not equal to -1, it gives different options else it will be set to 15 (1+2+4+8)
			[1] 	Smoke on hit
			[2] 	Burst after Smoking (burst immeditely if "Smoke on hit" bit is unset)
			[4] 	Emit a looping sound once damage
			[8] 	Emit debris
			[16]	React to Bullet (in case you don't want it to happen with a simple shot)
			[32]	React to Explosion
			[64]	React to Electricity (using the staff on it will work)
			[128]	Triggers on hit instead of burst
			[256]	Apply Pal on "leaking" projectile
			[512]	Channel message will kill this entity instead of toggling it.
						-It will behave like if it received a bullet so it's gonna leak then explode-
			[1024]	Is Leaking, ready to blow. The counter is launch and smoke emitted.
						-This one is for the game mechanics but you can set it in case you
						need some leaking followed by an explosion effect for some reason-
	xvel  = Projectile ID (Works if "Smoke on Hit" option is enabled)
	yvel  = Radius of the explosion
	zvel  = Delay before it explodes
	pal	  = Define the kind of explosion when it burst
			[0] Regular Explosion of Smoke
			[1] Normal Explosion
			[2]	Shrapnel Explosion (similar to explosive discs in red mod)
			[3] Dust and rocks Explosion
			[4] Dark Smoke Explosion
			[5]	Toxic Gas Explosion
			[6]	Water Explosion
			[7]	Electric Explosion
			[8]	Gibs Explosion
			[9] Blood Explosion
			[10] Fire Explosion
	owner = ID of the looping sound to play while leaking.
	shade = Damage caused by the explosion (negative value may heal).
	size =  The more it's big, bigger the explosion will be.
	
	REMINDER : Keeping extra equal to -1 will set all the default settings for a regular extinguisher
	
	Setting the "Blocking" CStat means this tile is enabled. Having it unset obviously means this tile is disabled.
	The "instant burst on activation" will operate whatever if the tile is disabled or enabled once the message is received.
	Blocking bit is also unset once it's leaking to avoid unexpected repeats.
*/

action AC_FELE_DEAD 1 1 1 1 1

eventloadactor A_FIRE_EXT_LIKE_EFFECT
	//Let's extract DATA and assign it to values
	set bursting_time 0
	geta[].hitag se_hitag
	geta[].lotag se_lotag
	geta[].extra se_extra
	geta[].xvel se_xvel
    geta[].yvel se_yvel
    geta[].zvel se_zvel
	geta[].owner tp_owner
	geta[].pal 	 se_pal
	geta[].shade se_shade
	
	seta[].hitag 0
	seta[].lotag 0
	seta[].xvel 0
	seta[].yvel 0
	seta[].zvel 0
	
	
	//Setting the appropriate cstats flags
	geta[].cstat temp
	or temp 32768
    seta[].cstat temp
	
	//Let's define if our Special Sprite is enabled
	//This will depend if our object got the hitscan flag or not.
	ifand temp 256
	{
		set tp_activated 1
	}
	else
	{
		set tp_activated 0  
	}
	
	//If our object is in wall mod, let's copy the surface from the nearby wall
	ifand temp 16
	{
		//Let's see what is behind our wall-like sprite and get its surface properties
		geta[].x sprite_x
		geta[].y sprite_y
		geta[].z sprite_z
		geta[].sectnum sprite_sector
		geta[].ang sprite_angle
		ifge sprite_angle 1024 
		{
			sub sprite_angle 1024
		}
		else
		{
			add sprite_angle 1024
		}
		cos sprite_cos sprite_angle
		sin sprite_sin sprite_angle
		hitscan sprite_x sprite_y sprite_z sprite_sector sprite_cos sprite_sin 0 h_sector h_wall h_sprite h_x h_y h_z 4294901808
		
		ifg h_sprite -1
		{
			geta[h_sprite].picnum surface_type
			state get_surface_type
			set se_linked_surface h_sprite
		}
		else
		{
			getw[h_wall].picnum surface_type
			state get_surface_type
			set se_linked_surface h_wall
		}

	}
	//If our object is in floor mod, let's copy the surface from the nearby floor or ceiling
	else ifand temp 32
	{
		//If it's close to the ceiling, we'll use its material, else, we're going to use the floor's one.
		geta[].sectnum temp2
		geta[].z temp4
		getsector[temp2].ceilingz temp3
		
		
		sub temp3 16
		ifg temp3 temp4
		{
			gets[temp2].ceilingpicnum surface_type
			state get_surface_type
		}
		else
		{
			gets[temp2].floorpicnum surface_type
			state get_surface_type
		}
		
		set se_linked_surface temp2
	}
	//If we are clueless, let's say it's a metal object
	else
	{
		//Since we are imiatating an extinguisher, let's select METAL as default surface
		set surface_type SURFACE_METAL
	}	
	geta[].picnum temp2
	setarray pre_surface_type[temp2] surface_type
	
	
	
	//Phase value to set
	//Will help later for timed events
	set phase_3 se_zvel
	sub phase_3 4
	set phase_2 se_zvel
	sub phase_2 5
	set phase_1 se_zvel
	sub phase_1 6
	
	
	//No special flag? Then, let's define default params
	//to make it work like a FireExtinguisher.
	ifl se_extra 0
	{
		set se_xvel P_SMOKE2 //8441
		set se_yvel 1536
		set se_zvel 65
		set tp_owner S_AMB_PIPEHISS2 //725
		set se_shade 4
		set se_extra 127
	}
	ifg se_pal 10
	{
		set se_pal 0
		seta[].pal 0
	}
		
enda

actor A_FIRE_EXT_LIKE_EFFECT 10 AC_BASE
	
	
	//If our sprite is already leaking from the start
	//Let's damage it since the beginning
	ife bursting_time 0
	{
		ifand se_extra 1024
		{
			ifand se_extra 128 state switch_activate
			set bursting_time -1
		}
	}
	
	//It's damaged by a weapon for the first time!
	ifhitweapon 
	{
		ife bursting_time 0
		{
			//Let's generate damage debris
			rand temp2 1
			add temp2 1
			for itervar range temp2
			{
				// Since we allow debris generation
				// let's check our surface type and build the right debris
				ifand se_extra 8
				{
					espawn A_GENERIC_DEBRIS
					switch surface_type
						case SURFACE_METAL
							setav[RETURN].debris_type DEBRIS_METAL
							break
						case SURFACE_WOOD
							setav[RETURN].debris_type DEBRIS_WOOD
							break
						case SURFACE_DIRT
							setav[RETURN].debris_type DEBRIS_ROCK
							break
						case SURFACE_PLASTIC
						case SURFACE_PAPER
							setav[RETURN].debris_type DEBRIS_PLASTIC
							break
						case SURFACE_FABRIC
						case SURFACE_CARPET
							setav[RETURN].debris_type DEBRIS_FABRIC
							break
						case SURFACE_GLASS
							setav[RETURN].debris_type DEBRIS_GLASS
							break
						case SURFACE_GRASS
							setav[RETURN].debris_type DEBRIS_GRASS
							break
						case SURFACE_LIGHT
						case SURFACE_ELECTRICAL
							setav[RETURN].debris_type DEBRIS_CINDER
							break
						case SURFACE_STONE
						case SURFACE_TILE
							setav[RETURN].debris_type DEBRIS_STONE
							break
						default
							setav[RETURN].debris_type DEBRIS_METAL
							break
					endswitch
					rand temp3 2047
					seta[RETURN].ang temp3
				}  
			}
			//Nothing more will happen if it's disabled!
			ife tp_activated 1
			{
				//Let's check what hurts and how to react
				set dmg_type 2
				ifwasweapon A_EXPLOSION set dmg_type 0
				else ifwasweapon P_BOMBETTE set dmg_type 0
				else ifwasweapon P_GRENADE set dmg_type 0
				else ifwasweapon P_MINIMISSILE set dmg_type 0
				else ifwasweapon P_DSLAM_THROWN set dmg_type 0
				else ifwasweapon P_BOWLINGBOMB set dmg_type 0
				
				else ifwasweapon P_SHOCKER set dmg_type 1
				else ifwasweapon P_EXPLOSION_SPARK set dmg_type 1

				
				//Explosive allowed? Let's burst!
				ifand se_extra 32
				{
					ife dmg_type 0
						set bursting_time 1
				}
				
				//Electric weapons allowed? Let's burst!
				ifand se_extra 64 
				{
					ife dmg_type 1
						set bursting_time 1
				}
				
				//Any other kind of weapons allowed? (especially bullets) Let's burst!
				ifand se_extra 16 
				{
					ife dmg_type 2
						set bursting_time 1
				}
			}
		}
	}
	//Is our Sprite damaged?
	ife bursting_time 1
    {
		//If it's already leaking and for some reason isn't damaged already, let's do it now
        ifand se_extra 1024
		{
			//This line is in case it should activate something during the leaking instead of the explosion
			ifand se_extra 128 state switch_activate
			set bursting_time -1
		}
		else
        {
			//if our sprite can leak before booming
			ifand se_extra 1 
			{
				//if our sprite is allowed to be noisy in the process..
				ifand se_extra 4 
				{
					setp[].sound_pitch 512
					ifge tp_owner 0
						sound tp_owner
					else	
						sound S_AMB_PIPEHISS2
						set tp_owner S_AMB_PIPEHISS2
					setp[].sound_pitch 0
				}
			}
			//If we skip the leaking phase, let's jump to the explosion
			action AC_FELE_DEAD
				
			//Here we get the angle of the projectile then add 180Â° degrees
			 geta[].htang st_do_once
			 
			 geta[].cstat temp
			 ifand temp 32
				 geta[].htceilingz se_above
				 sub se_above 16
				 geta[].htbposz tp_countone
				 ifl tp_countone se_above
					set se_ang_off 1024
					gets[se_linked_surface].floorpicnum dwall_temp
					set dwall_temp pre_surface_damage[dwall_temp]
					ifg dwall_temp 0
						sets[se_linked_surface].floorpicnum dwall_temp
				else
					set se_ang_off -1024
					gets[se_linked_surface].ceilingpicnum dwall_temp
					set dwall_temp pre_surface_damage[dwall_temp]
					ifg dwall_temp 0
						sets[se_linked_surface].ceilingpicnum dwall_temp
			else
				getw[se_linked_surface].picnum dwall_temp
				set dwall_temp pre_surface_damage[dwall_temp]
				ifg dwall_temp 0
					setw[se_linked_surface].picnum dwall_temp
			 
			 add st_do_once 1024
			 and st_do_once 2047
			or se_extra 1024
			set bursting_time -1
			ifn se_lotag 0
				ifand se_extra 128 state switch_activate 
        }
		
		
	}
	
	//It's leaking
	ifaction AC_FELE_DEAD
	{
		cstat 32768
		
		geta .ang temp8
        seta .ang st_do_once
		
		geta[THISACTOR].xrepeat tx_sprite
		geta[THISACTOR].yrepeat ty_sprite
		
		//No question to ask about 
		set bursting_time -1
		
		set temp4 counter
        and temp4 7
		
		//Leaking time
       ife temp4 0
        {
			ifand se_extra 1
			{
				rand temp4 2048
				ifrnd 127
					inv temp4
				ezshoot temp4 se_xvel
				geta .xrepeat temp4
				shiftr temp4 4
				clamp temp4 1 80

				setthisprojectile[RETURN].txrepeat tx_sprite
				setthisprojectile[RETURN].tyrepeat ty_sprite
				ifand se_extra 256
				{
					seta[RETURN].pal sprite[THISACTOR].pal
				}
				set temp4 480
				set temp3 counter
				shiftl temp3 1
				sub temp4 temp3
				
				
				ifand sprite[THISACTOR].cstat 32
				{
					seta[RETURN].zvel se_ang_off
					div temp4 4
				}
				
				seta[RETURN].xvel temp4
			}
		}
		add counter 1
		//It's finished, let's clean this mess
        ifactioncount 10
        {
            killit
        }
		else ifactioncount 9
        {
			nullop
		}
		//Phase to go boom and add some mess!
        else ifactioncount 8
        {
			ifand se_extra 1 
			{ 
				ifand se_extra 4 
				{ 
					stopactorsound THISACTOR tp_owner 
				}
			}
			
			//We have allowed explosion!
			ifand se_extra 2
			{
				ifand se_extra 8
				{
					rand temp 12
					add temp 15
					for itervar range temp
					{
							espawn A_GENERIC_DEBRIS
							switch surface_type
								case SURFACE_METAL
									setav[RETURN].debris_type DEBRIS_METAL
									break
								case SURFACE_WOOD
									setav[RETURN].debris_type DEBRIS_WOOD
									break
								case SURFACE_DIRT
									setav[RETURN].debris_type DEBRIS_ROCK
									break
								case SURFACE_PLASTIC
								case SURFACE_PAPER
									setav[RETURN].debris_type DEBRIS_PLASTIC
									break
								case SURFACE_FABRIC
								case SURFACE_CARPET
									setav[RETURN].debris_type DEBRIS_FABRIC
									break
								case SURFACE_GLASS
									setav[RETURN].debris_type DEBRIS_GLASS
									break
								case SURFACE_GRASS
									setav[RETURN].debris_type DEBRIS_GRASS
									break
								case SURFACE_LIGHT
								case SURFACE_ELECTRICAL
									setav[RETURN].debris_type DEBRIS_GRASS
									seta[RETURN].pal 2
									break
								case SURFACE_STONE
								case SURFACE_TILE
									setav[RETURN].debris_type DEBRIS_STONE
								case SURFACE_FLESH
									setav[RETURN].debris_type DEBRIS_STONE
									seta[RETURN].pal 9
									break
								case SURFACE_WATER
									setav[RETURN].debris_type DEBRIS_PLASTIC
									seta[RETURN].pal 6
									break
								case SURFACE_SLIME
									setav[RETURN].debris_type DEBRIS_PLASTIC
									seta[RETURN].pal 5
									break
								default
									setav[RETURN].debris_type DEBRIS_METAL
									break
							endswitch
							rand temp2 2047
							seta[RETURN].ang temp2
					}
				}
				
				
				set dmg_1 se_shade
				set dmg_2 se_shade
				set dmg_3 se_shade
				set dmg_4 se_shade
				
				mul dmg_1 10
				mul dmg_2 20
				mul dmg_3 30
				mul dmg_4 40
				
				div dmg_1 4
				div dmg_2 4
				div dmg_3 4
				div dmg_4 4
				
				include scripts/Addons/subcodes/explosions_fee.con
				
				hitradius se_yvel dmg_1 dmg_2 dmg_3 dmg_4
			}
			ifand se_extra 1
				xor se_extra 1
			//It got destroyed? Well, let's activate something!
            ifn se_lotag 0
				ifand se_extra 128 nullop else state switch_activate
			
        }
		else ifactioncount 1
		{

			ifand se_extra 1
			{
				sub se_zvel 1
				ifg se_zvel 0 
					resetactioncount
			}
			else set se_zvel 0
		}
		seta .ang temp8
	}
	//It has been activated.
	ife activateshit[se_hitag] 1 
	{
		//The autodestroy bit is on? Let's break itself!
		ifand se_extra 512 set bursting_time 1 
		else 
		{
			//Let's toggle the activation if such a bit is unset
			geta[].cstat temp
			xor temp 256
			seta[].cstat temp
			ife tp_activated 1 set tp_activated 0
			else set tp_activated 1
		}
	}
enda
